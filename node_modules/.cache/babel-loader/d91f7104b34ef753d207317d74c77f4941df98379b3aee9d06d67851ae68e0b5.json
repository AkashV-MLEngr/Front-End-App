{"ast":null,"code":"var _jsxFileName = \"D:\\\\New folder\\\\first-app\\\\src\\\\components\\\\PropertiesList.tsx\",\n  _s = $RefreshSig$();\nimport React from 'react';\nimport { linkGetAllProperties } from './api_links';\nimport { Card, Row, Col } from 'react-bootstrap';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n;\nconst PropertiesList = () => {\n  _s();\n  const [getAllProperties, setGetAllProperties] = React.useState();\n  React.useEffect(() => {\n    fetchGetAllProperties();\n  }, []);\n\n  // fetching the all properties using async await\n  const fetchGetAllProperties = async () => {\n    try {\n      const response = await fetch(linkGetAllProperties);\n      const allPrperties = await response.json();\n      setGetAllProperties(allPrperties);\n      console.log(allPrperties);\n    } catch (error) {\n      console.error(\"somathing went wrong please try again\", error);\n    }\n  };\n\n  // fetch data using axios\n  // const fetchGetAllProperties = () =>{\n  //     axios.get(linkGetAllProperties)\n  //     .then((response) => {\n  //         console.log(response.data)\n  //         setGetAllProperties(response.data)\n  //     })\n  //     .catch((error) =>{\n  //         console.error(\"somthing went wrong\", error)\n  //     })\n  // }\n\n  return /*#__PURE__*/_jsxDEV(CardGroup, {\n    children: getAllProperties && getAllProperties.map((property, index) =>\n    /*#__PURE__*/\n    //   <Card className='card mb-3' key={index} style={{ maxWidth: '540px' }}>\n    //     <Card.Img variant=\"top\" src=\"holder.js/100px160\" />\n    //     <Card.Body>\n    //       <Card.Title>{property.title}</Card.Title>\n    //       <Card.Text>\n    //         This is a wider card with supporting text below as a natural lead-in\n    //         to additional content. This content is a little bit longer.\n    //       </Card.Text>\n    //     </Card.Body>\n    //     <Card.Footer>\n    //       <small className=\"text-muted\">Last updated 3 mins ago</small>\n    //     </Card.Footer>\n    //   </Card>\n    _jsxDEV(Row, {\n      xs: 1,\n      md: 2,\n      className: \"g-4\",\n      children: Array.from({\n        length: 4\n      }).map((_, idx) => /*#__PURE__*/_jsxDEV(Col, {\n        children: /*#__PURE__*/_jsxDEV(Card, {\n          children: [/*#__PURE__*/_jsxDEV(Card.Img, {\n            variant: \"top\",\n            src: \"holder.js/100px160\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 71,\n            columnNumber: 19\n          }, this), /*#__PURE__*/_jsxDEV(Card.Body, {\n            children: [/*#__PURE__*/_jsxDEV(Card.Title, {\n              children: \"Card title\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 73,\n              columnNumber: 21\n            }, this), /*#__PURE__*/_jsxDEV(Card.Text, {\n              children: \"This is a longer card with supporting text below as a natural lead-in to additional content. This content is a little bit longer.\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 74,\n              columnNumber: 21\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 72,\n            columnNumber: 19\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 70,\n          columnNumber: 17\n        }, this)\n      }, idx, false, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 15\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 13\n    }, this))\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 51,\n    columnNumber: 5\n  }, this);\n};\n_s(PropertiesList, \"IUIRrixFcmid7Q5g6la/c+eeQLI=\");\n_c = PropertiesList;\nexport default PropertiesList;\nvar _c;\n$RefreshReg$(_c, \"PropertiesList\");","map":{"version":3,"names":["React","linkGetAllProperties","Card","Row","Col","jsxDEV","_jsxDEV","PropertiesList","_s","getAllProperties","setGetAllProperties","useState","useEffect","fetchGetAllProperties","response","fetch","allPrperties","json","console","log","error","CardGroup","children","map","property","index","xs","md","className","Array","from","length","_","idx","Img","variant","src","fileName","_jsxFileName","lineNumber","columnNumber","Body","Title","Text","_c","$RefreshReg$"],"sources":["D:/New folder/first-app/src/components/PropertiesList.tsx"],"sourcesContent":["import React from 'react'\r\nimport { linkGetAllProperties } from './api_links';\r\nimport axios from 'axios';\r\nimport {Card, Row, Col} from 'react-bootstrap';\r\n\r\ninterface propertyProps{\r\n    title:string;\r\n    description:string;\r\n    location:string;\r\n    area:string;\r\n    bedrooms:string;\r\n    bathrooms:string;\r\n    price:number;\r\n    nearBy:string;\r\n};\r\n\r\nconst PropertiesList = () => {\r\n\r\n    const [getAllProperties, setGetAllProperties] = React.useState<propertyProps[]>();\r\n\r\n    React.useEffect(() => {\r\n        fetchGetAllProperties();\r\n    }, []);\r\n\r\n    // fetching the all properties using async await\r\n    const fetchGetAllProperties = async() => {\r\n        try{\r\n            const response = await fetch(linkGetAllProperties)\r\n            const allPrperties = await response.json();\r\n            setGetAllProperties(allPrperties)\r\n            console.log(allPrperties);\r\n       \r\n        } catch (error) {\r\n            console.error(\"somathing went wrong please try again\", error);\r\n        }\r\n    };\r\n\r\n    // fetch data using axios\r\n    // const fetchGetAllProperties = () =>{\r\n    //     axios.get(linkGetAllProperties)\r\n    //     .then((response) => {\r\n    //         console.log(response.data)\r\n    //         setGetAllProperties(response.data)\r\n    //     })\r\n    //     .catch((error) =>{\r\n    //         console.error(\"somthing went wrong\", error)\r\n    //     })\r\n    // }\r\n\r\n  return (\r\n    <CardGroup>\r\n        {getAllProperties && getAllProperties.map((property, index) =>(\r\n        //   <Card className='card mb-3' key={index} style={{ maxWidth: '540px' }}>\r\n        //     <Card.Img variant=\"top\" src=\"holder.js/100px160\" />\r\n        //     <Card.Body>\r\n        //       <Card.Title>{property.title}</Card.Title>\r\n        //       <Card.Text>\r\n        //         This is a wider card with supporting text below as a natural lead-in\r\n        //         to additional content. This content is a little bit longer.\r\n        //       </Card.Text>\r\n        //     </Card.Body>\r\n        //     <Card.Footer>\r\n        //       <small className=\"text-muted\">Last updated 3 mins ago</small>\r\n        //     </Card.Footer>\r\n        //   </Card>\r\n\r\n            <Row xs={1} md={2} className=\"g-4\">\r\n            {Array.from({ length: 4 }).map((_, idx) => (\r\n              <Col key={idx}>\r\n                <Card>\r\n                  <Card.Img variant=\"top\" src=\"holder.js/100px160\" />\r\n                  <Card.Body>\r\n                    <Card.Title>Card title</Card.Title>\r\n                    <Card.Text>\r\n                      This is a longer card with supporting text below as a natural\r\n                      lead-in to additional content. This content is a little bit\r\n                      longer.\r\n                    </Card.Text>\r\n                  </Card.Body>\r\n                </Card>\r\n              </Col>\r\n            ))}\r\n            </Row>\r\n        ))}\r\n      \r\n    </CardGroup>\r\n  )\r\n}\r\n\r\nexport default PropertiesList"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}