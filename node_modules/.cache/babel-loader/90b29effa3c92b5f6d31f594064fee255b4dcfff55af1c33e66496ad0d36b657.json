{"ast":null,"code":"var _jsxFileName = \"D:\\\\New folder\\\\first-app\\\\src\\\\context\\\\AlertContext.tsx\",\n  _s = $RefreshSig$();\n// src/context/AlertContext.tsx\nimport React, { createContext, useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const AlertContext = /*#__PURE__*/createContext(undefined);\nexport const AlertProvider = ({\n  children\n}) => {\n  _s();\n  const [alerts, setAlerts] = useState([]);\n  const addAlert = (message, type) => {\n    const id = Date.now();\n    setAlerts(prevAlerts => [...prevAlerts, {\n      id,\n      message,\n      type\n    }]);\n  };\n  const removeAlert = id => {\n    setAlerts(prevAlerts => prevAlerts.filter(alert => alert.id !== id));\n  };\n  return /*#__PURE__*/_jsxDEV(AlertContext.Provider, {\n    value: {\n      alerts,\n      addAlert,\n      removeAlert\n    },\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 33,\n    columnNumber: 5\n  }, this);\n};\n_s(AlertProvider, \"XhbdHYBQeTA7ZvQAKo7930em6uc=\");\n_c = AlertProvider;\nvar _c;\n$RefreshReg$(_c, \"AlertProvider\");","map":{"version":3,"names":["React","createContext","useState","jsxDEV","_jsxDEV","AlertContext","undefined","AlertProvider","children","_s","alerts","setAlerts","addAlert","message","type","id","Date","now","prevAlerts","removeAlert","filter","alert","Provider","value","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["D:/New folder/first-app/src/context/AlertContext.tsx"],"sourcesContent":["// src/context/AlertContext.tsx\r\nimport React, { createContext, useState, ReactNode } from 'react';\r\n\r\ntype AlertType = 'success' | 'error';\r\n\r\ninterface Alert {\r\n  id: number;\r\n  message: string;\r\n  type: AlertType;\r\n}\r\n\r\ninterface AlertContextProps {\r\n  alerts: Alert[];\r\n  addAlert: (message: string, type: AlertType) => void;\r\n  removeAlert: (id: number) => void;\r\n}\r\n\r\nexport const AlertContext = createContext<AlertContextProps | undefined>(undefined);\r\n\r\nexport const AlertProvider: React.FC<{ children: ReactNode }> = ({ children }) => {\r\n  const [alerts, setAlerts] = useState<Alert[]>([]);\r\n\r\n  const addAlert = (message: string, type: AlertType) => {\r\n    const id = Date.now();\r\n    setAlerts((prevAlerts) => [...prevAlerts, { id, message, type }]);\r\n  };\r\n\r\n  const removeAlert = (id: number) => {\r\n    setAlerts((prevAlerts) => prevAlerts.filter(alert => alert.id !== id));\r\n  };\r\n\r\n  return (\r\n    <AlertContext.Provider value={{ alerts, addAlert, removeAlert }}>\r\n      {children}\r\n    </AlertContext.Provider>\r\n  );\r\n};\r\n"],"mappings":";;AAAA;AACA,OAAOA,KAAK,IAAIC,aAAa,EAAEC,QAAQ,QAAmB,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAgBlE,OAAO,MAAMC,YAAY,gBAAGJ,aAAa,CAAgCK,SAAS,CAAC;AAEnF,OAAO,MAAMC,aAAgD,GAAGA,CAAC;EAAEC;AAAS,CAAC,KAAK;EAAAC,EAAA;EAChF,MAAM,CAACC,MAAM,EAAEC,SAAS,CAAC,GAAGT,QAAQ,CAAU,EAAE,CAAC;EAEjD,MAAMU,QAAQ,GAAGA,CAACC,OAAe,EAAEC,IAAe,KAAK;IACrD,MAAMC,EAAE,GAAGC,IAAI,CAACC,GAAG,CAAC,CAAC;IACrBN,SAAS,CAAEO,UAAU,IAAK,CAAC,GAAGA,UAAU,EAAE;MAAEH,EAAE;MAAEF,OAAO;MAAEC;IAAK,CAAC,CAAC,CAAC;EACnE,CAAC;EAED,MAAMK,WAAW,GAAIJ,EAAU,IAAK;IAClCJ,SAAS,CAAEO,UAAU,IAAKA,UAAU,CAACE,MAAM,CAACC,KAAK,IAAIA,KAAK,CAACN,EAAE,KAAKA,EAAE,CAAC,CAAC;EACxE,CAAC;EAED,oBACEX,OAAA,CAACC,YAAY,CAACiB,QAAQ;IAACC,KAAK,EAAE;MAAEb,MAAM;MAAEE,QAAQ;MAAEO;IAAY,CAAE;IAAAX,QAAA,EAC7DA;EAAQ;IAAAgB,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACY,CAAC;AAE5B,CAAC;AAAClB,EAAA,CAjBWF,aAAgD;AAAAqB,EAAA,GAAhDrB,aAAgD;AAAA,IAAAqB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}