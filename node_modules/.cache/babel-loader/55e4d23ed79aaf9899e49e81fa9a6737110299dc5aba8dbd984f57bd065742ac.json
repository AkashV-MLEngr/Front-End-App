{"ast":null,"code":"var _jsxFileName = \"D:\\\\New folder\\\\first-app\\\\src\\\\context\\\\AlertContext.tsx\",\n  _s = $RefreshSig$();\n// src/context/AlertContext.tsx\nimport React, { createContext, useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const AlertContext = /*#__PURE__*/createContext(undefined);\nexport const AlertProvider = ({\n  children\n}) => {\n  _s();\n  const [alertMessage, setAlertMessage] = useState('');\n  const [alertVariant, setAlertVariant] = useState(null);\n  const setAlert = (message, variant) => {\n    setAlertMessage(message);\n    setAlertVariant(variant);\n  };\n  return /*#__PURE__*/_jsxDEV(AlertContext.Provider, {\n    value: {\n      alertMessage,\n      alertVariant,\n      setAlert\n    },\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 24,\n    columnNumber: 5\n  }, this);\n};\n_s(AlertProvider, \"60z9yImWX8M6b+3cILPGqvsF/wY=\");\n_c = AlertProvider;\nvar _c;\n$RefreshReg$(_c, \"AlertProvider\");","map":{"version":3,"names":["React","createContext","useState","jsxDEV","_jsxDEV","AlertContext","undefined","AlertProvider","children","_s","alertMessage","setAlertMessage","alertVariant","setAlertVariant","setAlert","message","variant","Provider","value","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["D:/New folder/first-app/src/context/AlertContext.tsx"],"sourcesContent":["// src/context/AlertContext.tsx\r\nimport React, { createContext, useState, ReactNode } from 'react';\r\n\r\ntype AlertVariant = 'success' | 'error';\r\n\r\ninterface AlertContextProps {\r\n  alertMessage: string;\r\n  alertVariant: AlertVariant | null;\r\n  setAlert: (message: string, variant: AlertVariant) => void;\r\n}\r\n\r\nexport const AlertContext = createContext<AlertContextProps | undefined>(undefined);\r\n\r\nexport const AlertProvider: React.FC<{ children: ReactNode }> = ({ children }) => {\r\n  const [alertMessage, setAlertMessage] = useState<string>('');\r\n  const [alertVariant, setAlertVariant] = useState<AlertVariant | null>(null);\r\n\r\n  const setAlert = (message: string, variant: AlertVariant) => {\r\n    setAlertMessage(message);\r\n    setAlertVariant(variant);\r\n  };\r\n\r\n  return (\r\n    <AlertContext.Provider value={{ alertMessage, alertVariant, setAlert }}>\r\n      {children}\r\n    </AlertContext.Provider>\r\n  );\r\n};\r\n"],"mappings":";;AAAA;AACA,OAAOA,KAAK,IAAIC,aAAa,EAAEC,QAAQ,QAAmB,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAUlE,OAAO,MAAMC,YAAY,gBAAGJ,aAAa,CAAgCK,SAAS,CAAC;AAEnF,OAAO,MAAMC,aAAgD,GAAGA,CAAC;EAAEC;AAAS,CAAC,KAAK;EAAAC,EAAA;EAChF,MAAM,CAACC,YAAY,EAAEC,eAAe,CAAC,GAAGT,QAAQ,CAAS,EAAE,CAAC;EAC5D,MAAM,CAACU,YAAY,EAAEC,eAAe,CAAC,GAAGX,QAAQ,CAAsB,IAAI,CAAC;EAE3E,MAAMY,QAAQ,GAAGA,CAACC,OAAe,EAAEC,OAAqB,KAAK;IAC3DL,eAAe,CAACI,OAAO,CAAC;IACxBF,eAAe,CAACG,OAAO,CAAC;EAC1B,CAAC;EAED,oBACEZ,OAAA,CAACC,YAAY,CAACY,QAAQ;IAACC,KAAK,EAAE;MAAER,YAAY;MAAEE,YAAY;MAAEE;IAAS,CAAE;IAAAN,QAAA,EACpEA;EAAQ;IAAAW,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACY,CAAC;AAE5B,CAAC;AAACb,EAAA,CAdWF,aAAgD;AAAAgB,EAAA,GAAhDhB,aAAgD;AAAA,IAAAgB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}