{"ast":null,"code":"var _jsxFileName = \"D:\\\\New folder\\\\first-app\\\\src\\\\components\\\\PropertiesList.tsx\",\n  _s = $RefreshSig$();\nimport React from 'react';\nimport { linkGetAllProperties } from './api_links';\nimport { Card, Row, Col } from 'react-bootstrap';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n;\nconst PropertiesList = () => {\n  _s();\n  const [getAllProperties, setGetAllProperties] = React.useState();\n  React.useEffect(() => {\n    fetchGetAllProperties();\n  }, []);\n\n  // fetching the all properties using async await\n  const fetchGetAllProperties = async () => {\n    try {\n      const response = await fetch(linkGetAllProperties);\n      const allPrperties = await response.json();\n      setGetAllProperties(allPrperties);\n      console.log(allPrperties);\n    } catch (error) {\n      console.error(\"somathing went wrong please try again\", error);\n    }\n  };\n\n  // fetch data using axios\n  // const fetchGetAllProperties = () =>{\n  //     axios.get(linkGetAllProperties)\n  //     .then((response) => {\n  //         console.log(response.data)\n  //         setGetAllProperties(response.data)\n  //     })\n  //     .catch((error) =>{\n  //         console.error(\"somthing went wrong\", error)\n  //     })\n  // }\n\n  return /*#__PURE__*/_jsxDEV(Row, {\n    xs: 1,\n    md: 2,\n    className: \"g-4\",\n    children: getAllProperties && getAllProperties.map((property, index) => /*#__PURE__*/_jsxDEV(Col, {\n      children: /*#__PURE__*/_jsxDEV(Card, {\n        children: [/*#__PURE__*/_jsxDEV(Card.Img, {\n          variant: \"top\",\n          src: \"images/img.jpg\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Card.Body, {\n          children: [/*#__PURE__*/_jsxDEV(Card.Title, {\n            children: [property.title, \", \\u20B9\", property.price]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 59,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(Card.Text, {\n            children: [property.location, \" | \", property.bedrooms, \" | sq.ft.\", property.area]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 60,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(Card.Text, {\n            children: [property.description, /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 62,\n              columnNumber: 39\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              className: \"text-muted\",\n              children: \"Nearby\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 62,\n              columnNumber: 44\n            }, this), \" \", property.near_by]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 61,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 11\n      }, this)\n    }, index, false, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 13\n    }, this))\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 51,\n    columnNumber: 5\n  }, this)\n  // <CardGroup>\n  //     {getAllProperties && getAllProperties.map((property, index) =>(\n  //       <Card className='card mb-3' key={index} style={{ maxWidth: '540px' }}>\n  //         <Card.Img variant=\"top\" src=\"holder.js/100px160\" />\n  //         <Card.Body>\n  //           <Card.Title>{property.title}</Card.Title>\n  //           <Card.Text>\n  //             This is a wider card with supporting text below as a natural lead-in\n  //             to additional content. This content is a little bit longer.\n  //           </Card.Text>\n  //         </Card.Body>\n  //         <Card.Footer>\n  //           <small className=\"text-muted\">Last updated 3 mins ago</small>\n  //         </Card.Footer>\n  //       </Card>\n  //     ))}\n\n  // </CardGroup>\n  ;\n};\n_s(PropertiesList, \"IUIRrixFcmid7Q5g6la/c+eeQLI=\");\n_c = PropertiesList;\nexport default PropertiesList;\nvar _c;\n$RefreshReg$(_c, \"PropertiesList\");","map":{"version":3,"names":["React","linkGetAllProperties","Card","Row","Col","jsxDEV","_jsxDEV","PropertiesList","_s","getAllProperties","setGetAllProperties","useState","useEffect","fetchGetAllProperties","response","fetch","allPrperties","json","console","log","error","xs","md","className","children","map","property","index","Img","variant","src","fileName","_jsxFileName","lineNumber","columnNumber","Body","Title","title","price","Text","location","bedrooms","area","description","near_by","_c","$RefreshReg$"],"sources":["D:/New folder/first-app/src/components/PropertiesList.tsx"],"sourcesContent":["import React from 'react'\r\nimport { linkGetAllProperties } from './api_links';\r\nimport axios from 'axios';\r\nimport {Card, Row, Col} from 'react-bootstrap';\r\n\r\ninterface propertyProps{\r\n    title:string;\r\n    description:string;\r\n    location:string;\r\n    area:string;\r\n    bedrooms:string;\r\n    bathrooms:string;\r\n    price:number;\r\n    near_by:string;\r\n};\r\n\r\nconst PropertiesList = () => {\r\n\r\n    const [getAllProperties, setGetAllProperties] = React.useState<propertyProps[]>();\r\n\r\n    React.useEffect(() => {\r\n        fetchGetAllProperties();\r\n    }, []);\r\n\r\n    // fetching the all properties using async await\r\n    const fetchGetAllProperties = async() => {\r\n        try{\r\n            const response = await fetch(linkGetAllProperties)\r\n            const allPrperties = await response.json();\r\n            setGetAllProperties(allPrperties)\r\n            console.log(allPrperties);\r\n       \r\n        } catch (error) {\r\n            console.error(\"somathing went wrong please try again\", error);\r\n        }\r\n    };\r\n\r\n    // fetch data using axios\r\n    // const fetchGetAllProperties = () =>{\r\n    //     axios.get(linkGetAllProperties)\r\n    //     .then((response) => {\r\n    //         console.log(response.data)\r\n    //         setGetAllProperties(response.data)\r\n    //     })\r\n    //     .catch((error) =>{\r\n    //         console.error(\"somthing went wrong\", error)\r\n    //     })\r\n    // }\r\n\r\n  return (\r\n    <Row xs={1} md={2} className=\"g-4\">\r\n      {/* {Array.from({ length: 4 }).map((property, index) => (\r\n        <Col key={idx}> */}\r\n        {getAllProperties && getAllProperties.map((property, index) =>(\r\n            <Col key={index}>\r\n          <Card>\r\n            <Card.Img variant=\"top\" src=\"images/img.jpg\" />\r\n            <Card.Body>\r\n              <Card.Title>{property.title}, â‚¹{property.price}</Card.Title>\r\n              <Card.Text>{property.location} | {property.bedrooms} | sq.ft.{property.area}</Card.Text>\r\n              <Card.Text>\r\n                {property.description}<br/><p className='text-muted'>Nearby</p> {property.near_by}\r\n              </Card.Text>\r\n            </Card.Body>\r\n          </Card>\r\n           {/* ))} */}\r\n        </Col>\r\n      ))}\r\n    </Row>\r\n    // <CardGroup>\r\n    //     {getAllProperties && getAllProperties.map((property, index) =>(\r\n    //       <Card className='card mb-3' key={index} style={{ maxWidth: '540px' }}>\r\n    //         <Card.Img variant=\"top\" src=\"holder.js/100px160\" />\r\n    //         <Card.Body>\r\n    //           <Card.Title>{property.title}</Card.Title>\r\n    //           <Card.Text>\r\n    //             This is a wider card with supporting text below as a natural lead-in\r\n    //             to additional content. This content is a little bit longer.\r\n    //           </Card.Text>\r\n    //         </Card.Body>\r\n    //         <Card.Footer>\r\n    //           <small className=\"text-muted\">Last updated 3 mins ago</small>\r\n    //         </Card.Footer>\r\n    //       </Card>\r\n    //     ))}\r\n      \r\n    // </CardGroup>\r\n  );\r\n}\r\n\r\nexport default PropertiesList"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}